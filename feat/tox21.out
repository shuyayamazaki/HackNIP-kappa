/home/lucky/anaconda3/envs/ionic2/lib/python3.9/site-packages/orb_models/forcefield/pretrained.py:71: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(local_path, map_location="cpu")
GPU tensorfloat matmuls precision set to 'high'. This can achieve up to 2x speedup on Nvidia A100 and H100 devices.
Traceback (most recent call last):
  File "/home/lucky/Projects/ion_conductivity/feat/train_eval.py", line 184, in <module>
    main(args)
  File "/home/lucky/Projects/ion_conductivity/feat/train_eval.py", line 152, in main
    mlp.fit(train_X, train_Y)
  File "/home/lucky/anaconda3/envs/ionic2/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 673, in fit
    return self._fit(X, y, incremental=False)
  File "/home/lucky/anaconda3/envs/ionic2/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 364, in _fit
    X, y = self._validate_input(X, y, incremental, reset=first_pass)
  File "/home/lucky/anaconda3/envs/ionic2/lib/python3.9/site-packages/sklearn/neural_network/_multilayer_perceptron.py", line 971, in _validate_input
    X, y = self._validate_data(X, y, accept_sparse=['csr', 'csc'],
  File "/home/lucky/anaconda3/envs/ionic2/lib/python3.9/site-packages/sklearn/base.py", line 433, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/lucky/anaconda3/envs/ionic2/lib/python3.9/site-packages/sklearn/utils/validation.py", line 63, in inner_f
    return f(*args, **kwargs)
  File "/home/lucky/anaconda3/envs/ionic2/lib/python3.9/site-packages/sklearn/utils/validation.py", line 880, in check_X_y
    y = check_array(y, accept_sparse='csr', force_all_finite=True,
  File "/home/lucky/anaconda3/envs/ionic2/lib/python3.9/site-packages/sklearn/utils/validation.py", line 63, in inner_f
    return f(*args, **kwargs)
  File "/home/lucky/anaconda3/envs/ionic2/lib/python3.9/site-packages/sklearn/utils/validation.py", line 720, in check_array
    _assert_all_finite(array,
  File "/home/lucky/anaconda3/envs/ionic2/lib/python3.9/site-packages/sklearn/utils/validation.py", line 103, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
